version: '3.8'
services:
  # API Gateway
  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./api-gateway:/api-gateway
    networks:
      - app-network

  # Event Bus
  event-bus:
    container_name: event-bus
    build:
      context: ./event-bus
      dockerfile: ./Dockerfile
    ports:
      - "4001:4001"
    volumes:
      - ./event-bus:/event-bus
    depends_on:
      - db
    networks:
      - app-network

  # Query
  query:
    container_name: query
    build:
      context: ./query
      dockerfile: ./Dockerfile
    ports:
      - "4002:4002"
    volumes:
      - ./query:/query
    depends_on:
      - event-bus
    networks:
      - app-network

  # Events
  event:
    container_name: event
    build:
      context: ./events
      dockerfile: ./Dockerfile
    ports:
      - "4003:4003"
    volumes:
      - ./events:/events
    depends_on:
      - event-bus
    networks:
      - app-network

  # Users
  user:
    container_name: user
    build:
      context: ./users
      dockerfile: ./Dockerfile
    ports:
      - "4004:4004"
    volumes:
      - ./users:/users
    depends_on:
      - event-bus
    networks:
      - app-network

  # Mysql
  db:
    container_name: database
    image: mysql:5.7.22
    environment:
      MYSQL_DATABASE: $DATABASE_NAME
      MYSQL_USER: $DATABASE_USER
      MYSQL_ROOT_PASSWORD: $DATABASE_ROOT_PASSWORD
    volumes:
      - ./dbdata:/var/lib/mysql
    ports:
      - 33066:3306
    networks:
      - app-network

networks:
  app-network:
    driver: bridge